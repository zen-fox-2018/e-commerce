var User=require("../models/User"),Cart=require("../models/Cart"),jwt=require("jsonwebtoken"),helpers=require("../helpers/helpers");module.exports={create:function(req,res){User.create({email:req.body.email,password:req.body.password}).then(result=>{result&&jwt.sign(req.body,process.env.JWT_SECRET,function(err,encoded){err?res.status(500).json({msg:"jwt error when encoding"}):res.status(201).json({email:result.email,password:result.password})})}).catch(err=>{res.status(401).json({msg:"internal server error",err:err})})},login:function(req,res){console.log(req.body),User.findOne({email:req.body.email}).then(result=>{console.log("mashoook"),result?(console.log("ini result"),helpers.compare(req.body.password,result.password)?jwt.sign({id:result._id,email:req.body.email},process.env.JWT_SECRET,function(err,encoded){console.log(err),err?(console.log(err),console.log("error dalem"),res.status(500).json({msg:"internal server error"})):res.status(200).json({id:result._id,email:req.body.email,token:encoded})}):res.status(401).json({msg:"salah username/password"})):(console.log("cant login"),res.status(400).json({msg:"cant login, user not found"}))}).catch(err=>{console.log("ini error yaaa"),console.log(err),res.status(500).json({msg:"internal server error",err:err})})},updateCart:function(req,res){Cart.findOne({userId:req.params.userId,item:req.body.itemId}).populate("item").then(result=>{if(result)return Cart.findOneAndUpdate({userId:req.params.userId,item:req.body.itemId},{userId:req.params.userId,item:req.body.itemId,qty:result.qty+1}).populate("item");Cart.create({userId:req.params.userId,item:req.body.itemId}).then(result=>Cart.findOne({userId:req.params.userId,item:req.body.itemId}).populate("item")).catch(err=>{})}).then(createdCart=>{res.status(201).json(createdCart)}).catch(err=>{console.log(err)})},findOne:function(req,res){Cart.find({userId:req.params.userId}).populate("item").then(result=>{result?res.status(200).json(result):res.status(200).json([])}).catch(err=>{res.status(500).json({msg:"internal server error"})})},updateQty:function(req,res){Cart.findOneAndUpdate({userId:req.params.userId,_id:req.params.cartId},{qty:req.body.qty}).then(result=>{result&&res.status(200).json(result)}).catch(err=>{console.log(err),res.status(500).json({msg:"internal server error",error:err})})},deleteOneCart:function(req,res){Cart.findOneAndDelete({userId:req.params.userId,_id:req.params.cartId}).then(result=>{result&&res.status(200).json(result)}).catch(err=>{res.status(500).json({msg:"internal server error",err:err})})},emptyCart:function(req,res){}};